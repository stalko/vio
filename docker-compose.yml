version: '3'

services:
  migrate:
    image: migrate/migrate:v4.16.2
    volumes:
      - ./viodata/db/migrations:/migrations
    entrypoint:
      [
        "migrate",
        "-path",
        "/migrations",
        "-database",
        "postgres://postgres:postgres@postgres:5432/vio?sslmode=disable",
      ]
    command: ["up"]
    depends_on:
      postgres:
        condition: service_healthy
    links: 
      - postgres:postgres
    restart: on-failure

  postgres:
    image: postgis/postgis:16-3.4
    restart: always
    command: postgres -c 'max_connections=1000'
    volumes:
    - ./scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: vio
      PGDATA: /data/postgres
    ports:
    - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres",]
      interval: 10s
      timeout: 5s
      retries: 5

  pgweb:
    container_name: pgweb
    restart: always
    image: sosedoff/pgweb:0.14.2
    ports: 
      - "8081:8081"
    links: 
      - postgres:postgres
    environment:
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/vio?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      dockerfile: Dockerfile.api
      context: .
    environment:
      - ENV=development
      - HTTP_PORT=8080
      - DATABASE_DSN=postgres://postgres:postgres@postgres:5432/vio?sslmode=disable
    ports:
        - "8080:8080"
    volumes:
      - .:/app
    links: 
      - postgres:postgres
    depends_on:
      postgres:
        condition: service_healthy

  import:
    build:
      dockerfile: Dockerfile.import
      context: .
    restart: "no"
    environment:
      - ENV=development
      - DATABASE_DSN=postgres://postgres:postgres@postgres:5432/vio?sslmode=disable
      - IMPORT_FILE=./app/data_dump.csv
      - COUNT_GO_ROUTINE=50
      - COUNT_BULK_INSERT=500
    volumes:
      - .:/app
    links: 
      - postgres:postgres
    depends_on:
      postgres:
        condition: service_healthy





    